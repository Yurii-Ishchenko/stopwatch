{"version":3,"sources":["components/container/container-styles.js","context/themeToggle/context.js","components/container/Container.jsx","components/themeToggler/themeToggler-styles.js","components/themeToggler/ThemeToggler.jsx","components/button/button-styles.js","components/button/Button.jsx","components/stopWatch/stopWatch-styles.js","utils/timeFns.js","components/stopWatch/StopWatch.jsx","App.js","context/themeToggle/Provider.jsx","index.js"],"names":["useStyles","createUseStyles","container","position","top","left","width","height","backgroundColor","containerColors","color","createContext","Container","children","useContext","themeToggleContext","isDarkTheme","darkThemeStyles","lightThemeStyles","classes","className","darkTheme","lightTheme","themeSwitch","display","alignItems","justifyContent","marginTop","marginRight","themeSwitchControl","flexShrink","border","borderRadius","padding","marginLeft","themeSwitchToggle","margin","opacity","pointerEvents","transform","themeSwitchTrack","userSelect","zIndex","cursor","themeSwitchMarker","transition","ThemeToggler","toggleTheme","useEffect","localStorage","setItem","size","onChange","checked","type","name","id","htmlFor","button","buttonColors","Button","onClick","renderStringContainer","renderString","textAlign","fontSize","marginBottom","buttonThumb","pad","value","StopWatch","useState","prevTime","setPrevTime","time","setTime","isActive","setIsActive","isShowStopBtn","setIsShowStopBtn","intervalId","useRef","hours","Math","floor","mins","secs","milliSecs","getTimeComponents","renderStopWatchString","clearInterval","current","prev","startTime","Date","now","window","setInterval","currentTime","startTimer","App","Provider","getItem","setIsDarkTheme","providerValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ac24b3f.chunk.js","sourcesContent":["import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    backgroundColor: (containerColors) => containerColors.backgroundColor,\r\n    color: (containerColors) => containerColors.color,\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { createContext } from \"react\";\r\nexport default createContext();\r\n","import { useContext } from \"react\";\r\nimport useStyles from \"./container-styles\";\r\nimport themeToggleContext from \"../../context/themeToggle/context\";\r\n\r\nexport default function Container({ children }) {\r\n  const { isDarkTheme, darkThemeStyles, lightThemeStyles } =\r\n    useContext(themeToggleContext);\r\n  const containerColors = isDarkTheme ? darkThemeStyles : lightThemeStyles;\r\n  const classes = useStyles(containerColors);\r\n\r\n  return <div className={classes.container}>{children}</div>;\r\n}\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  darkTheme: {\r\n    backgroundColor: \"#333\",\r\n  },\r\n  lightTheme: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  themeSwitch: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    marginTop: 20,\r\n    marginRight: 30,\r\n  },\r\n  themeSwitchControl: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexShrink: 0,\r\n    position: \"relative\",\r\n    width: 64,\r\n    height: 32,\r\n    border: \"4px solid #2196f3\",\r\n    borderRadius: \"50em\",\r\n    padding: \"3px 0\",\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n  },\r\n\r\n  themeSwitchToggle: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    margin: 0,\r\n    padding: 0,\r\n    opacity: 0,\r\n    height: 0,\r\n    width: 0,\r\n    pointerEvents: \"none\",\r\n    \"&:checked\": {\r\n      \"& ~ $themeSwitchMarker\": {\r\n        transform: \"translateX(35px)\",\r\n        backgroundColor: \"#333\",\r\n      },\r\n      \"& + $themeSwitchTrack\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n\r\n  themeSwitchTrack: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    color: \"transparent\",\r\n    userSelect: \"none\",\r\n    backgroundColor: \"#333\",\r\n    borderRadius: \"inherit\",\r\n    zIndex: 1,\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  themeSwitchMarker: {\r\n    position: \"relative\",\r\n    backgroundColor: \"#fff\",\r\n    width: \"26px\",\r\n    height: \"26px\",\r\n    borderRadius: \"50%\",\r\n    zIndex: 2,\r\n    pointerEvents: \"none\",\r\n    transform: \"translateX(3px)\",\r\n    transition: \"transform 250ms cubic-bezier(0.4, 0, 0.2, 1)\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { useEffect, useContext } from \"react\";\r\nimport useStyles from \"./themeToggler-styles\";\r\nimport { MdOutlineBedtime, MdOutlineLightMode } from \"react-icons/md\";\r\nimport themeToggleContext from \"../../context/themeToggle/context\";\r\nexport default function ThemeToggler() {\r\n  const { isDarkTheme, toggleTheme } = useContext(themeToggleContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isDarkTheme) {\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [isDarkTheme]);\r\n  return (\r\n    <div className={classes.themeSwitch}>\r\n      <MdOutlineLightMode size=\"2.5em\" />\r\n      <div className={classes.themeSwitchControl}>\r\n        <input\r\n          onChange={toggleTheme}\r\n          checked={isDarkTheme}\r\n          className={classes.themeSwitchToggle}\r\n          type=\"checkbox\"\r\n          name=\"theme\"\r\n          id=\"theme-switch-toggle\"\r\n          aria-label=\"Переключить между тёмной и светлой темой\"\r\n        />\r\n        <label\r\n          aria-hidden=\"true\"\r\n          className={classes.themeSwitchTrack}\r\n          htmlFor=\"theme-switch-toggle\"\r\n        ></label>\r\n        <div aria-hidden=\"true\" className={classes.themeSwitchMarker}></div>\r\n      </div>\r\n\r\n      <MdOutlineBedtime size=\"2.5em\" />\r\n    </div>\r\n  );\r\n}\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    width: 60,\r\n    height: 60,\r\n    border: (buttonColors) => `4px solid ${buttonColors.color}`,\r\n    backgroundColor: (buttonColors) => buttonColors.backgroundColor,\r\n    borderRadius: \"50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: 5,\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { useContext } from \"react\";\r\nimport themeToggleContext from \"../../context/themeToggle/context\";\r\nimport useStyles from \"./button-styles\";\r\n\r\nexport default function Button({ children, onClick }) {\r\n  const { isDarkTheme, darkThemeStyles, lightThemeStyles } =\r\n    useContext(themeToggleContext);\r\n  const buttonColors = isDarkTheme ? darkThemeStyles : lightThemeStyles;\r\n  const classes = useStyles(buttonColors);\r\n\r\n  return (\r\n    <button type=\"button\" className={classes.button} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  renderStringContainer: {\r\n    width: 435,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  renderString: {\r\n    textAlign: \"center\",\r\n    fontSize: 90,\r\n    display: \"inline-block\",\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n  },\r\n\r\n  buttonThumb: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","const pad = (value) => {\r\n  if (value < 10) {\r\n    return `0${value}`;\r\n  }\r\n  return `${value}`;\r\n};\r\n\r\nexport const getTimeComponents = (time) => {\r\n  const hours = pad(\r\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\r\n  );\r\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n  const milliSecs = pad(Math.floor((time % 1000) / 10));\r\n  return { hours, mins, secs, milliSecs };\r\n};\r\n","import { useState, useRef } from \"react\";\r\nimport {\r\n  BsFillPauseFill,\r\n  BsFillStopFill,\r\n  BsFillPlayFill,\r\n} from \"react-icons/bs\";\r\nimport Button from \"../button/Button\";\r\nimport useStyles from \"./stopWatch-styles\";\r\nimport { getTimeComponents } from \"../../utils/timeFns\";\r\n\r\nexport default function StopWatch() {\r\n  const [prevTime, setPrevTime] = useState(0);\r\n  const [time, setTime] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isShowStopBtn, setIsShowStopBtn] = useState(false);\r\n  const intervalId = useRef(null);\r\n\r\n  const classes = useStyles();\r\n\r\n  const startTimer = () => {\r\n    setPrevTime((prev) => prev + time);\r\n    setIsActive(true);\r\n    const startTime = Date.now();\r\n    intervalId.current = window.setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = currentTime - startTime;\r\n      setTime(deltaTime);\r\n    }, 10);\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    setIsActive(false);\r\n    clearInterval(intervalId.current);\r\n    setTime(0);\r\n    setPrevTime(0);\r\n  };\r\n\r\n  const onStopBntClick = () => {\r\n    stopTimer();\r\n    setIsShowStopBtn(false);\r\n  };\r\n\r\n  const pauseTimer = () => {\r\n    setIsActive(false);\r\n    clearInterval(intervalId.current);\r\n  };\r\n\r\n  const toggleStartPauseTimer = () => {\r\n    setIsShowStopBtn(true);\r\n    if (isActive) {\r\n      return pauseTimer();\r\n    }\r\n    return startTimer();\r\n  };\r\n  const allTime = time + prevTime;\r\n  const { hours, mins, secs, milliSecs } = getTimeComponents(allTime);\r\n\r\n  const renderStopWatchString = `${hours}:${mins}:${secs}:${milliSecs}`;\r\n  return (\r\n    <div>\r\n      <div className={classes.renderStringContainer}>\r\n        <p className={classes.renderString}>{renderStopWatchString}</p>\r\n      </div>\r\n\r\n      <div className={classes.buttonThumb}>\r\n        <Button onClick={toggleStartPauseTimer}>\r\n          {isActive ? (\r\n            <BsFillPauseFill size=\"2.5em\" color=\"#2196f3\" />\r\n          ) : (\r\n            <BsFillPlayFill size=\"2.5em\" color=\"#2196f3\" />\r\n          )}\r\n        </Button>\r\n\r\n        {isShowStopBtn && (\r\n          <Button onClick={onStopBntClick}>\r\n            <BsFillStopFill size=\"2.5em\" color=\"#2196f3\" />\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Container from \"./components/container/Container.jsx\";\nimport ThemeToggler from \"./components/themeToggler/ThemeToggler.jsx\";\nimport StopWatch from \"./components/stopWatch/StopWatch.jsx\";\n\nfunction App() {\n  return (\n    <Container>\n      <ThemeToggler />\n      <StopWatch />\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\r\nimport toggleThemeContext from \"./context\";\r\n\r\nexport default function Provider({ children }) {\r\n  const [isDarkTheme, setIsDarkTheme] = useState(() =>\r\n    localStorage.getItem(\"theme\") === \"dark\" ? true : false\r\n  );\r\n  const toggleTheme = () => {\r\n    setIsDarkTheme(!isDarkTheme);\r\n  };\r\n  const darkThemeStyles = { backgroundColor: \"#333333\", color: \"#fff\" };\r\n  const lightThemeStyles = { backgroundColor: \"#fff\", color: \"#333333\" };\r\n  const providerValue = {\r\n    isDarkTheme,\r\n    toggleTheme,\r\n    darkThemeStyles,\r\n    lightThemeStyles,\r\n  };\r\n\r\n  return (\r\n    <toggleThemeContext.Provider value={providerValue}>\r\n      {children}\r\n    </toggleThemeContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ThemeToggleProvider from \"./context/themeToggle/Provider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeToggleProvider>\n      <App />\n    </ThemeToggleProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}